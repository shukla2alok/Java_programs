
public class Heapsort {
		public void sort(int[] arr) {
			int n = arr.length;
			
			// Build max heap
			for(int i = n/2-1; i>=0; i--)
				heapify(arr, n, i);
			
			// Heap sort
			for(int i = n-1; i >= 0; i--) {
				int temp = arr[0];
				arr[0] = arr[i];
				arr[i] = temp;
				
				// heapify root element
				heapify(arr, i, 0);
			}
				
		}
		// heapify
		public void heapify(int arr[], int n, int i) {
			int largest = i;
			int l = 2*i+1;
			int r = 2*i+2;
			if(l < n && arr[l] > arr[largest])
				largest = l;
			if(r < n && arr[r] > arr[largest])
				largest = r;
			
			if(largest != i)
			{
				int temp = arr[i];
				arr[i] = arr[largest];
				arr[largest] = temp;
				heapify(arr, n, largest);
			}
		}
	
		public void prtArr(int[] arr)
		{
			int n = arr.length;
			for(int i = 0; i < n ; i++) {
				System.out.print(arr[i]+" ");
			}
		}
	
	
	
	// Driver code
		public static void main(String[] args) {
			int arr[] = {1, 12, 9, 5, 6, 10};
			Heapsort hs = new Heapsort();
			hs.prtArr(arr);
			hs.sort(arr);
			System.out.println("Sorted Array is:");
			hs.prtArr(arr);
			
		}
}
